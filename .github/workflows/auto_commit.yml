
name: Auto Commit and Push

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: # Allow manual triggering
  push:
    branches: [ main ]
    paths:
      - 'recordings/**'
      - '*.log'
      - 'usernames.txt'

permissions:
  contents: write
  actions: read

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
    
    - name: Configure Git
      run: |
        git config --global user.name "TikTok Recorder Bot"
        git config --global user.email "recorder@github-actions.com"
        git config --global push.default simple
        git config --global pull.rebase false
        git config --global --add safe.directory "*"
    
    - name: Clean up git locks and processes
      run: |
        find .git -name "*.lock" -type f -delete || true
        pkill -f git || true
        sleep 2
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psutil
    
    - name: Check for changes
      id: check
      run: |
        git fetch origin main || true
        if [[ -n $(git status --porcelain) ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Found changes to commit:"
          git status --porcelain
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No changes found"
        fi
    
    - name: Run auto-commit script
      if: steps.check.outputs.changes == 'true'
      run: |
        python auto_commit.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Force push if needed
      if: failure() && steps.check.outputs.changes == 'true'
      run: |
        git add . || true
        git commit -m "Force commit: $(date)" || true
        git push origin main --force || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
